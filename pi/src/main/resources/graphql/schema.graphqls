type Query{
    findDepartements : [Departement],
    findDepartement(id:Float):Departement
    findEnseignants : [Enseignant],
    findEnseignant(id:Float):Enseignant
<<<<<<< HEAD
    findClasses : [Classe],
    findClasse(id:Float):Classe
    findElementsDeModule : [ElementDeModule],
    findElementDeModule(id:Float):ElementDeModule
    findSemestres : [Semestre],
    findSemestre(id:String):Semestre
    findTypeSalles : [TypeSalle],
    findTypeSalle(id:String):TypeSalle
=======
    findSemestres : [Semestre],
    findSemestre(id:Float):Semestre
    findTypeSalles : [TypeSalle],
    findTypeSalle(id:Float):TypeSalle

>>>>>>> d47801b397487acc5b35bf0f7853f2b97a87ccb5
}
type Mutation {
    addDepartement(departement: DepartementDTO) : Departement,
    updateDepartement(id:Float,departement: DepartementDTO):Departement,
    deleteDepartement(id:Float):String,
    addEnseignant(enseignant: EnseignantDTO) : Enseignant,
    updateEnseignant(id:Float,enseignant: EnseignantDTO):Enseignant,
    deleteEnseignant(id:Float):String,
<<<<<<< HEAD
    addClasse (classe: ClasseDTO) : Classe,
    updateClasse(id:Float, classe: ClasseDTO):Classe,
    deleteClasse(id:Float):String,
    addElementDeModule(elementdemodule: ElementDeModuleDTO) : ElementDeModule,
    updateElementDeModule(id:Float, elementdemodule: ElementDeModuleDTO):ElementDeModule,
    deleteElementDeModule(id:Float):String,
=======
>>>>>>> d47801b397487acc5b35bf0f7853f2b97a87ccb5
    addSemestre(semestre: SemestreDTO) : Semestre,
    updateSemestre(id:Float,semestre: SemestreDTO):Semestre,
    deleteSemestre(id:Float):String,
    addTypeSalle(typeSalle: TypeSalleDTO) : TypeSalle,
    updateTypeSalle(id:Float,typeSalle: TypeSalleDTO):TypeSalle,
    deleteTypeSalle(id:Float):String,
}
type Enseignant{
    id :ID,
    nom : String,
    civilite: String,
    prenom: String,
    tel: String,
    email: String,
    login: String,
    password: String,
    specialite: String
}
type Departement{
    id :ID,
    libelle:String
}
<<<<<<< HEAD
type Classe{
    id :ID,
    libelle : String,
    nbrEleves: Int
}
type ElementDeModule{
    id :ID,
    libelle : String,
    volumeHoraire: Int
}
=======
>>>>>>> d47801b397487acc5b35bf0f7853f2b97a87ccb5
type Semestre{
    id :ID,
    dateDebut : String,
    dateFin : String,
    num : String,
<<<<<<< HEAD
    anneeUniv : String
=======
   anneeUniv : String
>>>>>>> d47801b397487acc5b35bf0f7853f2b97a87ccb5
}
type TypeSalle{
    id : ID,
    libelle : String,
    capacite: Int,
    equipement : String
}
<<<<<<< HEAD

=======
>>>>>>> d47801b397487acc5b35bf0f7853f2b97a87ccb5
input DepartementDTO{
    libelle:String
}
input SemestreDTO{
    dateDebut : String,
    dateFin : String,
    num : String,
    anneeUniv : String
}
input TypeSalleDTO{
    libelle : String,
    capacite: Int,
    equipement : String
}
input EnseignantDTO{
    nom : String,
    civilite: String,
    prenom: String,
    tel: String,
    email: String,
    login: String,
    password: String,
    specialite: String
}
input ClasseDTO{
    libelle : String,
    nbrEleves: Int
}
input ElementDeModuleDTO{
    libelle : String,
    volumeHoraire: Int
}
input SemestreDTO{
    dateDebut : String,
    dateFin : String,
    num : String,
    anneeUniv : String
}
input TypeSalleDTO{
    libelle : String,
    capacite: Int,
    equipement : String
}